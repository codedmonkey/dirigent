---
title: Using Dirigent in a Composer project
---

To start using your Dirigent registry in a Composer project, you'll need to add some configuration to the
`composer.json` file, or specify it as a command line option when creating new projects. The examples on this page
also disable fetching from Packagist directly.

**Note that projects using Composer 1 are not supported by Dirigent.**

## New projects

If you haven't already, make sure to [set up authentication](composer-authentication) for your Composer installation.

### composer init

Run the following command to interactively generate a new `composer.json` file in your current directory. This registry
is automatically added to your project.

```shell
composer init --repository="{{ app.request.getSchemeAndHttpHost() }}"
```

If mirroring of Packagist is enabled, include `--repository='{"packagist.org": false}'` in the command so
the project takes full advantage of the capabilities of the registry.

```shell
composer init --repository="{{ app.request.getSchemeAndHttpHost() }}" --repository='{"packagist.org": false}'
```

### composer create-project

Run the following command to generate a Composer project from a package called `acme/website` in the
`my-project` directory.

```shell
composer create-project acme/website --add-repository --repository="{{ app.request.getSchemeAndHttpHost() }}" my-project
```

If mirroring of Packagist is enabled, include `--repository='{"packagist.org": false}'` in the command so
the project takes full advantage of the capabilities of the registry.

```shell
composer create-project acme/website --add-repository --repository="{{ app.request.getSchemeAndHttpHost() }}" --repository='{"packagist.org": false}' my-project
```

## Existing projects

You can enable the Dirigent registry on existing Composer projects by using the Composer CLI or by editing
`composer.json` directly.

### composer config

Run the following command to enable this registry

```shell
composer config repositories.{{ dirigent.slug }} composer {{ app.request.getSchemeAndHttpHost() }}
```

```shell
composer config repositories.packagist.org false
```

### Manually editing composer.json

```json
{
    "repositories": [
        {"type": "composer", "url": ""},
        {"packagist.org": false}
    ]
}
```

## Disabling TLS

By default Composer refuses to connect with registries over the `http` protocol, as its recommended to use `https` which
provides better security using TLS. However, it is possible to remove this requirement.

```shell
composer config disable-tls true
```

```json
{
    "config": {
        "disable-tls": true
    }
}
```

**Disabling TLS brings risks and can be dangerous.**
